@using Microsoft.AspNetCore.Components.Authorization
@using UbiquitousLanguageManager.Web.Components.Authorization
@using UbiquitousLanguageManager.Web.Components.Security
@inject AuthenticationStateProvider AuthStateProvider
@inject UbiquitousLanguageManager.Web.Services.BlazorAuthenticationService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject ILogger<NavMenu> Logger

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <i class="fas fa-language me-2"></i>
            ユビキタス言語管理
        </a>
        <button title="ナビゲーション メニュー" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="CollapseNavMenu">
    <nav class="flex-column">
        
        @* ユーザー情報とセキュリティ状態 *@
        <AuthorizeView>
            <Authorized Context="authContext">
                <div class="nav-user-info">
                    <div class="user-avatar">
                        <i class="fas fa-user-circle fa-2x"></i>
                    </div>
                    <div class="user-details">
                        <div class="user-name">@(authContext.User.Identity?.Name ?? "ユーザー")</div>
                        <SecurityStatusIndicator Size="SecurityStatusIndicator.SecurityIndicatorSize.Small" 
                                               ShowDetails="false" 
                                               ShowActions="false" />
                    </div>
                </div>
                <hr class="nav-divider" />
            </Authorized>
            <NotAuthorized>
                <div class="nav-login-prompt">
                    <a href="/login" class="btn btn-outline-light btn-sm">
                        <i class="fas fa-sign-in-alt me-1"></i>
                        ログイン
                    </a>
                </div>
                <hr class="nav-divider" />
            </NotAuthorized>
        </AuthorizeView>

        @* メインナビゲーション（UI設計書準拠: ユビキタス言語一覧画面がホーム） *@
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <i class="fas fa-home me-2"></i>
                ホーム
            </NavLink>
        </div>
        
        @* 管理メニュー *@
        <AuthorizeViewExtensions ShowForRoles='new List<string> { "SuperUser", "ProjectManager" }'>
            <div class="nav-section">
                <div class="nav-section-header">
                    <i class="fas fa-cog me-2"></i>
                    管理
                </div>
                
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/admin/users">
                        <i class="fas fa-users me-2"></i>
                        ユーザー管理
                    </NavLink>
                </div>
                
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="projects">
                        <i class="fas fa-project-diagram me-2"></i>
                        プロジェクト管理
                    </NavLink>
                </div>
            </div>
        </AuthorizeViewExtensions>
        
        @* ドメイン管理メニュー *@
        <AuthorizeView>
            <Authorized>
                <div class="nav-section">
                    <div class="nav-section-header">
                        <i class="fas fa-book me-2"></i>
                        ドメイン管理
                    </div>
                    
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="ubiquitous-languages">
                            <i class="fas fa-language me-2"></i>
                            ユビキタス言語
                        </NavLink>
                    </div>
                </div>
            </Authorized>
        </AuthorizeView>
        
        @* 個人設定 *@
        <AuthorizeView>
            <Authorized>
                <div class="nav-section">
                    <div class="nav-section-header">
                        <i class="fas fa-user me-2"></i>
                        個人設定
                    </div>
                    
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="change-password">
                            <i class="fas fa-key me-2"></i>
                            パスワード変更
                        </NavLink>
                    </div>
                </div>
                
                <hr class="nav-divider" />
                <div class="nav-item px-3">
                    <button class="nav-link btn btn-link text-start w-100" @onclick="Logout">
                        <i class="fas fa-sign-out-alt me-2"></i>
                        ログアウト
                    </button>
                </div>
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    /// <summary>
    /// ナビゲーションメニューの表示切り替え
    /// 
    /// 【Blazor Server初学者向け解説】
    /// モバイル端末でのハンバーガーメニュー制御です。
    /// CSSクラスの追加・削除により表示状態を切り替えます。
    /// </summary>
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    /// <summary>
    /// ナビゲーションメニューを閉じる
    /// </summary>
    private void CollapseNavMenu()
    {
        collapseNavMenu = true;
    }
    
    /// <summary>
    /// 仕様書10.3.1準拠: ログアウト処理（API経由・SignalR制約回避）
    ///
    /// 【Blazor Server制約対応】
    /// Blazor ComponentではSignalR制約によりCookie削除不可のため、
    /// JavaScript interop経由でAPI（/api/auth/logout）を呼び出します。
    /// この方式により HTTPコンテキストでの認証Cookie削除が可能になります。
    /// </summary>
    private async Task Logout()
    {
        try
        {
            // API経由でログアウト（SignalR制約回避・動作確認済み）
            // authApi.logout()は既存のauth-api.jsを使用し、戻り値を取得
            var result = await JS.InvokeAsync<object>("authApi.logout");

            // ログアウト成功後はログイン画面へ遷移
            Logger.LogInformation("ログアウト処理完了 - ログイン画面へリダイレクト中");
            Navigation.NavigateTo("/login", forceLoad: true);
        }
        catch (Exception ex)
        {
            // JavaScript実行失敗時もログイン画面へリダイレクト（セキュリティ優先）
            Logger.LogWarning(ex, "ログアウト処理中にエラーが発生しました: {Message}", ex.Message);
            Navigation.NavigateTo("/login", forceLoad: true);
        }
    }
}

<style>
    .navbar-toggler {
        background-color: rgba(255, 255, 255, 0.1);
    }

    .top-row {
        height: 3.5rem;
        background-color: rgba(0,0,0,0.4);
    }

    .navbar-brand {
        font-size: 1.1rem;
        font-weight: 600;
    }

    .bi {
        display: inline-block;
        position: relative;
        width: 1.25rem;
        height: 1.25rem;
        margin-right: 0.75rem;
        top: -1px;
    }

    .nav-item {
        font-size: 0.9rem;
        position: relative;
    }

    .nav-link {
        border-radius: 4px;
        height: 3rem;
        display: flex;
        align-items: center;
        line-height: 3rem;
        color: #d7d7d7;
        text-decoration: none;
        transition: all 0.15s ease-in-out;
    }

    .nav-link:hover {
        background-color: rgba(255,255,255,0.1);
        color: white;
    }

    .nav-link.active {
        background-color: rgba(255,255,255,0.25);
        color: white;
    }

    .nav-scrollable {
        height: calc(100vh - 3.5rem);
        overflow-y: auto;
    }
    
    /* ユーザー情報セクション */
    .nav-user-info {
        display: flex;
        align-items: center;
        padding: 1rem;
        background: rgba(255, 255, 255, 0.05);
        margin: 0.5rem;
        border-radius: 0.5rem;
    }
    
    .user-avatar {
        color: #d7d7d7;
        margin-right: 0.75rem;
    }
    
    .user-details {
        flex: 1;
    }
    
    .user-name {
        font-weight: 600;
        color: white;
        font-size: 0.9rem;
        margin-bottom: 0.25rem;
    }
    
    .nav-login-prompt {
        padding: 1rem;
        text-align: center;
    }
    
    /* セクション分け */
    .nav-section {
        margin: 1rem 0;
    }
    
    .nav-section-header {
        padding: 0.5rem 1rem;
        font-size: 0.8rem;
        font-weight: 600;
        color: #aaa;
        text-transform: uppercase;
        letter-spacing: 0.05rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        margin-bottom: 0.5rem;
    }
    
    .nav-divider {
        border-color: rgba(255, 255, 255, 0.1);
        margin: 1rem 0;
    }
    
    /* ログアウトボタン */
    .nav-link.btn {
        border: none;
        padding: 0;
        margin: 0;
        background: none;
    }
    
    .nav-link.btn:hover {
        background-color: rgba(220, 53, 69, 0.1);
        color: #dc3545;
    }

    .navbar-toggler:checked ~ .nav-scrollable,
    .nav-scrollable.show {
        display: block;
    }

    @@media (min-width: 641px) {
        .navbar-toggler {
            display: none;
        }

        .nav-scrollable {
            display: block !important;
            overflow-y: auto;
        }
    }
    
    @@media (max-width: 640px) {
        .nav-user-info {
            flex-direction: column;
            text-align: center;
        }
        
        .user-avatar {
            margin-right: 0;
            margin-bottom: 0.5rem;
        }
    }
</style>