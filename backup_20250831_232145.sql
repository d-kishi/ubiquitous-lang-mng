--
-- PostgreSQL database dump
--

-- Dumped from database version 16.9
-- Dumped by pg_dump version 16.9

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: AspNetRoleClaims; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."AspNetRoleClaims" (
    "Id" integer NOT NULL,
    "RoleId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE public."AspNetRoleClaims" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "AspNetRoleClaims"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."AspNetRoleClaims" IS 'ASP.NET Core Identity ロールクレーム管理';


--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE public."AspNetRoleClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."AspNetRoleClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetRoles; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."AspNetRoles" (
    "Id" text NOT NULL,
    "Name" character varying(256),
    "NormalizedName" character varying(256),
    "ConcurrencyStamp" text
);


ALTER TABLE public."AspNetRoles" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "AspNetRoles"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."AspNetRoles" IS 'ASP.NET Core Identity ロール管理';


--
-- Name: AspNetUserClaims; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."AspNetUserClaims" (
    "Id" integer NOT NULL,
    "UserId" text NOT NULL,
    "ClaimType" text,
    "ClaimValue" text
);


ALTER TABLE public."AspNetUserClaims" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "AspNetUserClaims"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."AspNetUserClaims" IS 'ASP.NET Core Identity ユーザークレーム管理';


--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE public."AspNetUserClaims" ALTER COLUMN "Id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."AspNetUserClaims_Id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: AspNetUserRoles; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL
);


ALTER TABLE public."AspNetUserRoles" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "AspNetUserRoles"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."AspNetUserRoles" IS 'ASP.NET Core Identity ユーザー・ロール関連';


--
-- Name: AspNetUsers; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."AspNetUsers" (
    "Id" text NOT NULL,
    "Name" character varying(50) NOT NULL,
    "IsFirstLogin" boolean DEFAULT true NOT NULL,
    "UpdatedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL,
    "InitialPassword" character varying(100),
    "PasswordResetToken" text,
    "PasswordResetExpiry" timestamp with time zone,
    "UpdatedBy" character varying(450) NOT NULL,
    "UserName" character varying(256),
    "NormalizedUserName" character varying(256),
    "Email" character varying(256),
    "NormalizedEmail" character varying(256),
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text,
    "SecurityStamp" text,
    "ConcurrencyStamp" text,
    "PhoneNumber" text,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL
);


ALTER TABLE public."AspNetUsers" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "AspNetUsers"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."AspNetUsers" IS 'ASP.NET Core Identity ユーザー情報とカスタムプロフィール';


--
-- Name: COLUMN "AspNetUsers"."Id"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."Id" IS 'ユーザーID（主キー、GUID形式）';


--
-- Name: COLUMN "AspNetUsers"."Name"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."Name" IS 'ユーザー氏名（カスタムフィールド）';


--
-- Name: COLUMN "AspNetUsers"."IsFirstLogin"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."IsFirstLogin" IS '初回ログインフラグ（カスタムフィールド）';


--
-- Name: COLUMN "AspNetUsers"."UpdatedAt"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."UpdatedAt" IS '最終更新日時（タイムゾーン付き）';


--
-- Name: COLUMN "AspNetUsers"."IsDeleted"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."IsDeleted" IS '論理削除フラグ（false:有効、true:削除済み）';


--
-- Name: COLUMN "AspNetUsers"."InitialPassword"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."InitialPassword" IS '初期パスワード（初回ログイン時まで保持）';


--
-- Name: COLUMN "AspNetUsers"."PasswordResetToken"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."PasswordResetToken" IS 'パスワードリセットトークン（Phase A3機能）';


--
-- Name: COLUMN "AspNetUsers"."PasswordResetExpiry"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."PasswordResetExpiry" IS 'リセットトークン有効期限（Phase A3機能）';


--
-- Name: COLUMN "AspNetUsers"."UpdatedBy"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."UpdatedBy" IS '最終更新者ID';


--
-- Name: COLUMN "AspNetUsers"."UserName"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."UserName" IS 'ユーザー名（ログイン用）';


--
-- Name: COLUMN "AspNetUsers"."NormalizedUserName"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."NormalizedUserName" IS '正規化ユーザー名（検索用）';


--
-- Name: COLUMN "AspNetUsers"."Email"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."Email" IS 'メールアドレス';


--
-- Name: COLUMN "AspNetUsers"."NormalizedEmail"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."NormalizedEmail" IS '正規化メールアドレス（検索用）';


--
-- Name: COLUMN "AspNetUsers"."EmailConfirmed"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."EmailConfirmed" IS 'メール確認済みフラグ';


--
-- Name: COLUMN "AspNetUsers"."PasswordHash"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."PasswordHash" IS 'パスワードハッシュ値（Identity管理）';


--
-- Name: COLUMN "AspNetUsers"."SecurityStamp"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."SecurityStamp" IS 'セキュリティスタンプ（パスワード変更時更新）';


--
-- Name: COLUMN "AspNetUsers"."ConcurrencyStamp"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."ConcurrencyStamp" IS '同時実行制御スタンプ';


--
-- Name: COLUMN "AspNetUsers"."PhoneNumber"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."PhoneNumber" IS '電話番号';


--
-- Name: COLUMN "AspNetUsers"."PhoneNumberConfirmed"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."PhoneNumberConfirmed" IS '電話番号確認済みフラグ';


--
-- Name: COLUMN "AspNetUsers"."TwoFactorEnabled"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."TwoFactorEnabled" IS '二要素認証有効フラグ';


--
-- Name: COLUMN "AspNetUsers"."LockoutEnd"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."LockoutEnd" IS 'ロックアウト終了時間';


--
-- Name: COLUMN "AspNetUsers"."LockoutEnabled"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."LockoutEnabled" IS 'ロックアウト有効フラグ';


--
-- Name: COLUMN "AspNetUsers"."AccessFailedCount"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."AspNetUsers"."AccessFailedCount" IS 'アクセス失敗回数';


--
-- Name: DomainApprovers; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."DomainApprovers" (
    "DomainApproverId" bigint NOT NULL,
    "DomainId" bigint NOT NULL,
    "ApproverId" character varying(450) NOT NULL,
    "UpdatedBy" character varying(450) NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);


ALTER TABLE public."DomainApprovers" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "DomainApprovers"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."DomainApprovers" IS 'ドメイン別承認権限の管理、承認者とドメインの多対多関連';


--
-- Name: COLUMN "DomainApprovers"."DomainApproverId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DomainApprovers"."DomainApproverId" IS 'ドメイン承認者ID（主キー）';


--
-- Name: COLUMN "DomainApprovers"."DomainId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DomainApprovers"."DomainId" IS 'ドメインID（外部キー）';


--
-- Name: COLUMN "DomainApprovers"."ApproverId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DomainApprovers"."ApproverId" IS '承認者ユーザーID（外部キー）';


--
-- Name: COLUMN "DomainApprovers"."UpdatedBy"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DomainApprovers"."UpdatedBy" IS '最終更新者ユーザーID';


--
-- Name: COLUMN "DomainApprovers"."UpdatedAt"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DomainApprovers"."UpdatedAt" IS '最終更新日時（タイムゾーン付き）';


--
-- Name: DomainApprovers_DomainApproverId_seq; Type: SEQUENCE; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE public."DomainApprovers" ALTER COLUMN "DomainApproverId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."DomainApprovers_DomainApproverId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Domains; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."Domains" (
    "DomainId" bigint NOT NULL,
    "ProjectId" bigint NOT NULL,
    "DomainName" character varying(50) NOT NULL,
    "Description" text,
    "UpdatedBy" character varying(450) NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE public."Domains" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "Domains"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."Domains" IS 'プロジェクト内ドメイン分類と承認権限の管理単位';


--
-- Name: COLUMN "Domains"."DomainId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Domains"."DomainId" IS 'ドメインID（主キー）';


--
-- Name: COLUMN "Domains"."ProjectId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Domains"."ProjectId" IS '所属プロジェクトID';


--
-- Name: COLUMN "Domains"."DomainName"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Domains"."DomainName" IS 'ドメイン名（プロジェクト内一意）';


--
-- Name: COLUMN "Domains"."Description"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Domains"."Description" IS 'ドメイン説明';


--
-- Name: COLUMN "Domains"."UpdatedBy"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Domains"."UpdatedBy" IS '最終更新者ユーザーID';


--
-- Name: COLUMN "Domains"."UpdatedAt"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Domains"."UpdatedAt" IS '最終更新日時（タイムゾーン付き）';


--
-- Name: COLUMN "Domains"."IsDeleted"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Domains"."IsDeleted" IS '論理削除フラグ（false:有効、true:削除済み）';


--
-- Name: Domains_DomainId_seq; Type: SEQUENCE; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE public."Domains" ALTER COLUMN "DomainId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Domains_DomainId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: DraftUbiquitousLang; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."DraftUbiquitousLang" (
    "DraftUbiquitousLangId" bigint NOT NULL,
    "DomainId" bigint NOT NULL,
    "JapaneseName" character varying(30) NOT NULL,
    "EnglishName" character varying(50),
    "Description" text,
    "OccurrenceContext" character varying(50),
    "Remarks" text,
    "Status" character varying(20) DEFAULT 'Draft'::character varying NOT NULL,
    "ApplicantId" character varying(450),
    "ApplicationDate" timestamp with time zone,
    "RejectionReason" text,
    "SourceFormalUbiquitousLangId" bigint,
    "UpdatedBy" character varying(450) NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);


ALTER TABLE public."DraftUbiquitousLang" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "DraftUbiquitousLang"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."DraftUbiquitousLang" IS '編集中・承認申請中のドラフトユビキタス言語管理';


--
-- Name: COLUMN "DraftUbiquitousLang"."DraftUbiquitousLangId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."DraftUbiquitousLangId" IS 'ドラフトユビキタス言語ID（主キー）';


--
-- Name: COLUMN "DraftUbiquitousLang"."DomainId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."DomainId" IS '所属ドメインID（外部キー）';


--
-- Name: COLUMN "DraftUbiquitousLang"."JapaneseName"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."JapaneseName" IS '和名';


--
-- Name: COLUMN "DraftUbiquitousLang"."EnglishName"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."EnglishName" IS '英名';


--
-- Name: COLUMN "DraftUbiquitousLang"."Description"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."Description" IS '意味・説明（改行可能）';


--
-- Name: COLUMN "DraftUbiquitousLang"."OccurrenceContext"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."OccurrenceContext" IS '発生機会';


--
-- Name: COLUMN "DraftUbiquitousLang"."Remarks"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."Remarks" IS '備考（改行可能）';


--
-- Name: COLUMN "DraftUbiquitousLang"."Status"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."Status" IS 'ステータス（Draft/PendingApproval）';


--
-- Name: COLUMN "DraftUbiquitousLang"."ApplicantId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."ApplicantId" IS '申請者ユーザーID';


--
-- Name: COLUMN "DraftUbiquitousLang"."ApplicationDate"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."ApplicationDate" IS '申請日時';


--
-- Name: COLUMN "DraftUbiquitousLang"."RejectionReason"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."RejectionReason" IS '却下理由';


--
-- Name: COLUMN "DraftUbiquitousLang"."SourceFormalUbiquitousLangId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."SourceFormalUbiquitousLangId" IS '編集元正式ユビキタス言語ID';


--
-- Name: COLUMN "DraftUbiquitousLang"."UpdatedBy"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."UpdatedBy" IS '最終更新者ユーザーID';


--
-- Name: COLUMN "DraftUbiquitousLang"."UpdatedAt"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLang"."UpdatedAt" IS '最終更新日時（タイムゾーン付き）';


--
-- Name: DraftUbiquitousLangRelations; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."DraftUbiquitousLangRelations" (
    "DraftUbiquitousLangRelationId" bigint NOT NULL,
    "DraftUbiquitousLangId" bigint NOT NULL,
    "FormalUbiquitousLangId" bigint NOT NULL,
    "UpdatedBy" character varying(450) NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);


ALTER TABLE public."DraftUbiquitousLangRelations" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "DraftUbiquitousLangRelations"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."DraftUbiquitousLangRelations" IS 'ドラフトユビキタス言語と正式ユビキタス言語間の関連性管理';


--
-- Name: COLUMN "DraftUbiquitousLangRelations"."DraftUbiquitousLangRelationId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLangRelations"."DraftUbiquitousLangRelationId" IS 'ドラフト関連ID（主キー）';


--
-- Name: COLUMN "DraftUbiquitousLangRelations"."DraftUbiquitousLangId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLangRelations"."DraftUbiquitousLangId" IS 'ドラフトユビキタス言語ID';


--
-- Name: COLUMN "DraftUbiquitousLangRelations"."FormalUbiquitousLangId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLangRelations"."FormalUbiquitousLangId" IS '関連正式ユビキタス言語ID';


--
-- Name: COLUMN "DraftUbiquitousLangRelations"."UpdatedBy"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLangRelations"."UpdatedBy" IS '最終更新者ユーザーID';


--
-- Name: COLUMN "DraftUbiquitousLangRelations"."UpdatedAt"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."DraftUbiquitousLangRelations"."UpdatedAt" IS '最終更新日時（タイムゾーン付き）';


--
-- Name: DraftUbiquitousLangRelations_DraftUbiquitousLangRelationId_seq; Type: SEQUENCE; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE public."DraftUbiquitousLangRelations" ALTER COLUMN "DraftUbiquitousLangRelationId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."DraftUbiquitousLangRelations_DraftUbiquitousLangRelationId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: DraftUbiquitousLang_DraftUbiquitousLangId_seq; Type: SEQUENCE; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE public."DraftUbiquitousLang" ALTER COLUMN "DraftUbiquitousLangId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."DraftUbiquitousLang_DraftUbiquitousLangId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: FormalUbiquitousLang; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."FormalUbiquitousLang" (
    "FormalUbiquitousLangId" bigint NOT NULL,
    "DomainId" bigint NOT NULL,
    "JapaneseName" character varying(30) NOT NULL,
    "EnglishName" character varying(50) NOT NULL,
    "Description" text NOT NULL,
    "OccurrenceContext" character varying(50),
    "Remarks" text,
    "UpdatedBy" character varying(450) NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE public."FormalUbiquitousLang" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "FormalUbiquitousLang"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."FormalUbiquitousLang" IS '承認済み正式ユビキタス言語の管理、Claude Code出力対象データ';


--
-- Name: COLUMN "FormalUbiquitousLang"."FormalUbiquitousLangId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLang"."FormalUbiquitousLangId" IS '正式ユビキタス言語ID（主キー）';


--
-- Name: COLUMN "FormalUbiquitousLang"."DomainId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLang"."DomainId" IS '所属ドメインID（外部キー）';


--
-- Name: COLUMN "FormalUbiquitousLang"."JapaneseName"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLang"."JapaneseName" IS '和名（ドメイン内一意）';


--
-- Name: COLUMN "FormalUbiquitousLang"."EnglishName"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLang"."EnglishName" IS '英名';


--
-- Name: COLUMN "FormalUbiquitousLang"."Description"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLang"."Description" IS '意味・説明（改行可能）';


--
-- Name: COLUMN "FormalUbiquitousLang"."OccurrenceContext"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLang"."OccurrenceContext" IS '発生機会';


--
-- Name: COLUMN "FormalUbiquitousLang"."Remarks"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLang"."Remarks" IS '備考（改行可能）';


--
-- Name: COLUMN "FormalUbiquitousLang"."UpdatedBy"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLang"."UpdatedBy" IS '最終更新者ユーザーID';


--
-- Name: COLUMN "FormalUbiquitousLang"."UpdatedAt"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLang"."UpdatedAt" IS '最終更新日時（タイムゾーン付き）';


--
-- Name: COLUMN "FormalUbiquitousLang"."IsDeleted"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLang"."IsDeleted" IS '論理削除フラグ（false:有効、true:削除済み）';


--
-- Name: FormalUbiquitousLangHistory; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."FormalUbiquitousLangHistory" (
    "HistoryId" bigint NOT NULL,
    "FormalUbiquitousLangId" bigint NOT NULL,
    "DomainId" bigint NOT NULL,
    "JapaneseName" character varying(30) NOT NULL,
    "EnglishName" character varying(50) NOT NULL,
    "Description" text NOT NULL,
    "OccurrenceContext" character varying(50),
    "Remarks" text,
    "RelatedUbiquitousLangSnapshot" jsonb,
    "UpdatedBy" character varying(450) NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE public."FormalUbiquitousLangHistory" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "FormalUbiquitousLangHistory"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."FormalUbiquitousLangHistory" IS '正式ユビキタス言語の変更履歴管理、JSONB活用でスナップショット保存';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."HistoryId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."HistoryId" IS '履歴ID（主キー）';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."FormalUbiquitousLangId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."FormalUbiquitousLangId" IS '元の正式ユビキタス言語ID';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."DomainId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."DomainId" IS '所属ドメインID（外部キー）';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."JapaneseName"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."JapaneseName" IS '和名';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."EnglishName"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."EnglishName" IS '英名';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."Description"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."Description" IS '意味・説明（改行可能）';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."OccurrenceContext"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."OccurrenceContext" IS '発生機会';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."Remarks"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."Remarks" IS '備考（改行可能）';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."RelatedUbiquitousLangSnapshot"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."RelatedUbiquitousLangSnapshot" IS '関連ユビキタス言語スナップショット（JSONB、GINインデックス対応）';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."UpdatedBy"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."UpdatedBy" IS '最終更新者ユーザーID';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."UpdatedAt"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."UpdatedAt" IS '最終更新日時（タイムゾーン付き）';


--
-- Name: COLUMN "FormalUbiquitousLangHistory"."IsDeleted"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."FormalUbiquitousLangHistory"."IsDeleted" IS '論理削除フラグ（false:有効、true:削除済み）';


--
-- Name: FormalUbiquitousLangHistory_HistoryId_seq; Type: SEQUENCE; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE public."FormalUbiquitousLangHistory" ALTER COLUMN "HistoryId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."FormalUbiquitousLangHistory_HistoryId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: FormalUbiquitousLang_FormalUbiquitousLangId_seq; Type: SEQUENCE; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE public."FormalUbiquitousLang" ALTER COLUMN "FormalUbiquitousLangId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."FormalUbiquitousLang_FormalUbiquitousLangId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: Projects; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."Projects" (
    "ProjectId" bigint NOT NULL,
    "ProjectName" character varying(50) NOT NULL,
    "Description" text,
    "UpdatedBy" character varying(450) NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL,
    "IsDeleted" boolean DEFAULT false NOT NULL
);


ALTER TABLE public."Projects" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "Projects"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."Projects" IS 'プロジェクト情報の管理とユーザー・ドメインとの関連制御';


--
-- Name: COLUMN "Projects"."ProjectId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Projects"."ProjectId" IS 'プロジェクトID（主キー）';


--
-- Name: COLUMN "Projects"."ProjectName"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Projects"."ProjectName" IS 'プロジェクト名（システム内一意）';


--
-- Name: COLUMN "Projects"."Description"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Projects"."Description" IS 'プロジェクト説明';


--
-- Name: COLUMN "Projects"."UpdatedBy"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Projects"."UpdatedBy" IS '最終更新者ユーザーID';


--
-- Name: COLUMN "Projects"."UpdatedAt"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Projects"."UpdatedAt" IS '最終更新日時（タイムゾーン付き）';


--
-- Name: COLUMN "Projects"."IsDeleted"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."Projects"."IsDeleted" IS '論理削除フラグ（false:有効、true:削除済み）';


--
-- Name: Projects_ProjectId_seq; Type: SEQUENCE; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE public."Projects" ALTER COLUMN "ProjectId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."Projects_ProjectId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: RelatedUbiquitousLang; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."RelatedUbiquitousLang" (
    "RelatedUbiquitousLangId" bigint NOT NULL,
    "SourceUbiquitousLangId" bigint NOT NULL,
    "TargetUbiquitousLangId" bigint NOT NULL,
    "UpdatedBy" character varying(450) NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);


ALTER TABLE public."RelatedUbiquitousLang" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "RelatedUbiquitousLang"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."RelatedUbiquitousLang" IS 'ユビキタス言語間の関連性管理、多対多関連';


--
-- Name: COLUMN "RelatedUbiquitousLang"."RelatedUbiquitousLangId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."RelatedUbiquitousLang"."RelatedUbiquitousLangId" IS '関連ユビキタス言語ID（主キー）';


--
-- Name: COLUMN "RelatedUbiquitousLang"."SourceUbiquitousLangId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."RelatedUbiquitousLang"."SourceUbiquitousLangId" IS '関連元ユビキタス言語ID';


--
-- Name: COLUMN "RelatedUbiquitousLang"."TargetUbiquitousLangId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."RelatedUbiquitousLang"."TargetUbiquitousLangId" IS '関連先ユビキタス言語ID';


--
-- Name: COLUMN "RelatedUbiquitousLang"."UpdatedBy"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."RelatedUbiquitousLang"."UpdatedBy" IS '最終更新者ユーザーID';


--
-- Name: COLUMN "RelatedUbiquitousLang"."UpdatedAt"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."RelatedUbiquitousLang"."UpdatedAt" IS '最終更新日時（タイムゾーン付き）';


--
-- Name: RelatedUbiquitousLang_RelatedUbiquitousLangId_seq; Type: SEQUENCE; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE public."RelatedUbiquitousLang" ALTER COLUMN "RelatedUbiquitousLangId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."RelatedUbiquitousLang_RelatedUbiquitousLangId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: UserProjects; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."UserProjects" (
    "UserProjectId" bigint NOT NULL,
    "UserId" character varying(450) NOT NULL,
    "ProjectId" bigint NOT NULL,
    "UpdatedBy" character varying(450) NOT NULL,
    "UpdatedAt" timestamp with time zone NOT NULL
);


ALTER TABLE public."UserProjects" OWNER TO ubiquitous_lang_user;

--
-- Name: TABLE "UserProjects"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON TABLE public."UserProjects" IS 'ユーザーとプロジェクトの多対多関連を管理、権限制御の基盤';


--
-- Name: COLUMN "UserProjects"."UserProjectId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."UserProjects"."UserProjectId" IS 'ユーザープロジェクトID（主キー）';


--
-- Name: COLUMN "UserProjects"."UserId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."UserProjects"."UserId" IS 'ユーザーID（外部キー）';


--
-- Name: COLUMN "UserProjects"."ProjectId"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."UserProjects"."ProjectId" IS 'プロジェクトID（外部キー）';


--
-- Name: COLUMN "UserProjects"."UpdatedBy"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."UserProjects"."UpdatedBy" IS '最終更新者ユーザーID';


--
-- Name: COLUMN "UserProjects"."UpdatedAt"; Type: COMMENT; Schema: public; Owner: ubiquitous_lang_user
--

COMMENT ON COLUMN public."UserProjects"."UpdatedAt" IS '最終更新日時（タイムゾーン付き）';


--
-- Name: UserProjects_UserProjectId_seq; Type: SEQUENCE; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE public."UserProjects" ALTER COLUMN "UserProjectId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public."UserProjects_UserProjectId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: __EFMigrationsHistory; Type: TABLE; Schema: public; Owner: ubiquitous_lang_user
--

CREATE TABLE public."__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL
);


ALTER TABLE public."__EFMigrationsHistory" OWNER TO ubiquitous_lang_user;

--
-- Data for Name: AspNetRoleClaims; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."AspNetRoleClaims" ("Id", "RoleId", "ClaimType", "ClaimValue") FROM stdin;
\.


--
-- Data for Name: AspNetRoles; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."AspNetRoles" ("Id", "Name", "NormalizedName", "ConcurrencyStamp") FROM stdin;
28550963-e043-4d5e-b5c9-78f88d44ba9f	SuperUser	SUPERUSER	\N
8e216e5f-08a0-4ff2-97d0-d47c250840b9	ProjectManager	PROJECTMANAGER	\N
246c9c7f-3c52-45ae-b32e-e3b53bb1ed3e	DomainApprover	DOMAINAPPROVER	\N
643dc8ee-9ca7-4612-8b9e-4202aa7a09ae	GeneralUser	GENERALUSER	\N
\.


--
-- Data for Name: AspNetUserClaims; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."AspNetUserClaims" ("Id", "UserId", "ClaimType", "ClaimValue") FROM stdin;
\.


--
-- Data for Name: AspNetUserRoles; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."AspNetUserRoles" ("UserId", "RoleId") FROM stdin;
f9db26ce-c016-473e-aea1-1a5c37579c77	28550963-e043-4d5e-b5c9-78f88d44ba9f
\.


--
-- Data for Name: AspNetUsers; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."AspNetUsers" ("Id", "Name", "IsFirstLogin", "UpdatedAt", "IsDeleted", "InitialPassword", "PasswordResetToken", "PasswordResetExpiry", "UpdatedBy", "UserName", "NormalizedUserName", "Email", "NormalizedEmail", "EmailConfirmed", "PasswordHash", "SecurityStamp", "ConcurrencyStamp", "PhoneNumber", "PhoneNumberConfirmed", "TwoFactorEnabled", "LockoutEnd", "LockoutEnabled", "AccessFailedCount") FROM stdin;
f9db26ce-c016-473e-aea1-1a5c37579c77	システム管理者	t	2025-07-30 14:25:55.83663+00	f	TempPass123!	\N	\N	system	admin@ubiquitous-lang.com	ADMIN@UBIQUITOUS-LANG.COM	admin@ubiquitous-lang.com	ADMIN@UBIQUITOUS-LANG.COM	f	AQAAAAIAAYagAAAAEBZ+0krqmwrOo3D5alRcVZoAd8tORw6Qs9MY8PtMbWVTWQcXPgaDbrMUVH7HHCytLg==	7JARUCB4K7MJ3DI45LLOI2OANVYH65H3	efdd9728-d4a5-4416-b413-28e52a71927a	\N	f	f	\N	f	0
\.


--
-- Data for Name: DomainApprovers; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."DomainApprovers" ("DomainApproverId", "DomainId", "ApproverId", "UpdatedBy", "UpdatedAt") FROM stdin;
\.


--
-- Data for Name: Domains; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."Domains" ("DomainId", "ProjectId", "DomainName", "Description", "UpdatedBy", "UpdatedAt", "IsDeleted") FROM stdin;
\.


--
-- Data for Name: DraftUbiquitousLang; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."DraftUbiquitousLang" ("DraftUbiquitousLangId", "DomainId", "JapaneseName", "EnglishName", "Description", "OccurrenceContext", "Remarks", "Status", "ApplicantId", "ApplicationDate", "RejectionReason", "SourceFormalUbiquitousLangId", "UpdatedBy", "UpdatedAt") FROM stdin;
\.


--
-- Data for Name: DraftUbiquitousLangRelations; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."DraftUbiquitousLangRelations" ("DraftUbiquitousLangRelationId", "DraftUbiquitousLangId", "FormalUbiquitousLangId", "UpdatedBy", "UpdatedAt") FROM stdin;
\.


--
-- Data for Name: FormalUbiquitousLang; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."FormalUbiquitousLang" ("FormalUbiquitousLangId", "DomainId", "JapaneseName", "EnglishName", "Description", "OccurrenceContext", "Remarks", "UpdatedBy", "UpdatedAt", "IsDeleted") FROM stdin;
\.


--
-- Data for Name: FormalUbiquitousLangHistory; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."FormalUbiquitousLangHistory" ("HistoryId", "FormalUbiquitousLangId", "DomainId", "JapaneseName", "EnglishName", "Description", "OccurrenceContext", "Remarks", "RelatedUbiquitousLangSnapshot", "UpdatedBy", "UpdatedAt", "IsDeleted") FROM stdin;
\.


--
-- Data for Name: Projects; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."Projects" ("ProjectId", "ProjectName", "Description", "UpdatedBy", "UpdatedAt", "IsDeleted") FROM stdin;
\.


--
-- Data for Name: RelatedUbiquitousLang; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."RelatedUbiquitousLang" ("RelatedUbiquitousLangId", "SourceUbiquitousLangId", "TargetUbiquitousLangId", "UpdatedBy", "UpdatedAt") FROM stdin;
\.


--
-- Data for Name: UserProjects; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."UserProjects" ("UserProjectId", "UserId", "ProjectId", "UpdatedBy", "UpdatedAt") FROM stdin;
\.


--
-- Data for Name: __EFMigrationsHistory; Type: TABLE DATA; Schema: public; Owner: ubiquitous_lang_user
--

COPY public."__EFMigrationsHistory" ("MigrationId", "ProductVersion") FROM stdin;
20250729153117_FinalInitMigrationWithComments	8.0.0
20250812070606_AddIdentityClaimTables	8.0.0
20250812071836_Phase_A5_StandardIdentityMigration	8.0.0
\.


--
-- Name: AspNetRoleClaims_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubiquitous_lang_user
--

SELECT pg_catalog.setval('public."AspNetRoleClaims_Id_seq"', 1, false);


--
-- Name: AspNetUserClaims_Id_seq; Type: SEQUENCE SET; Schema: public; Owner: ubiquitous_lang_user
--

SELECT pg_catalog.setval('public."AspNetUserClaims_Id_seq"', 1, false);


--
-- Name: DomainApprovers_DomainApproverId_seq; Type: SEQUENCE SET; Schema: public; Owner: ubiquitous_lang_user
--

SELECT pg_catalog.setval('public."DomainApprovers_DomainApproverId_seq"', 1, false);


--
-- Name: Domains_DomainId_seq; Type: SEQUENCE SET; Schema: public; Owner: ubiquitous_lang_user
--

SELECT pg_catalog.setval('public."Domains_DomainId_seq"', 1, false);


--
-- Name: DraftUbiquitousLangRelations_DraftUbiquitousLangRelationId_seq; Type: SEQUENCE SET; Schema: public; Owner: ubiquitous_lang_user
--

SELECT pg_catalog.setval('public."DraftUbiquitousLangRelations_DraftUbiquitousLangRelationId_seq"', 1, false);


--
-- Name: DraftUbiquitousLang_DraftUbiquitousLangId_seq; Type: SEQUENCE SET; Schema: public; Owner: ubiquitous_lang_user
--

SELECT pg_catalog.setval('public."DraftUbiquitousLang_DraftUbiquitousLangId_seq"', 1, false);


--
-- Name: FormalUbiquitousLangHistory_HistoryId_seq; Type: SEQUENCE SET; Schema: public; Owner: ubiquitous_lang_user
--

SELECT pg_catalog.setval('public."FormalUbiquitousLangHistory_HistoryId_seq"', 1, false);


--
-- Name: FormalUbiquitousLang_FormalUbiquitousLangId_seq; Type: SEQUENCE SET; Schema: public; Owner: ubiquitous_lang_user
--

SELECT pg_catalog.setval('public."FormalUbiquitousLang_FormalUbiquitousLangId_seq"', 1, false);


--
-- Name: Projects_ProjectId_seq; Type: SEQUENCE SET; Schema: public; Owner: ubiquitous_lang_user
--

SELECT pg_catalog.setval('public."Projects_ProjectId_seq"', 1, false);


--
-- Name: RelatedUbiquitousLang_RelatedUbiquitousLangId_seq; Type: SEQUENCE SET; Schema: public; Owner: ubiquitous_lang_user
--

SELECT pg_catalog.setval('public."RelatedUbiquitousLang_RelatedUbiquitousLangId_seq"', 1, false);


--
-- Name: UserProjects_UserProjectId_seq; Type: SEQUENCE SET; Schema: public; Owner: ubiquitous_lang_user
--

SELECT pg_catalog.setval('public."UserProjects_UserProjectId_seq"', 1, false);


--
-- Name: AspNetRoleClaims PK_AspNetRoleClaims; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."AspNetRoleClaims"
    ADD CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetRoles PK_AspNetRoles; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."AspNetRoles"
    ADD CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id");


--
-- Name: AspNetUserClaims PK_AspNetUserClaims; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."AspNetUserClaims"
    ADD CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id");


--
-- Name: AspNetUserRoles PK_AspNetUserRoles; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId");


--
-- Name: AspNetUsers PK_AspNetUsers; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."AspNetUsers"
    ADD CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id");


--
-- Name: DomainApprovers PK_DomainApprovers; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DomainApprovers"
    ADD CONSTRAINT "PK_DomainApprovers" PRIMARY KEY ("DomainApproverId");


--
-- Name: Domains PK_Domains; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."Domains"
    ADD CONSTRAINT "PK_Domains" PRIMARY KEY ("DomainId");


--
-- Name: DraftUbiquitousLang PK_DraftUbiquitousLang; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DraftUbiquitousLang"
    ADD CONSTRAINT "PK_DraftUbiquitousLang" PRIMARY KEY ("DraftUbiquitousLangId");


--
-- Name: DraftUbiquitousLangRelations PK_DraftUbiquitousLangRelations; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DraftUbiquitousLangRelations"
    ADD CONSTRAINT "PK_DraftUbiquitousLangRelations" PRIMARY KEY ("DraftUbiquitousLangRelationId");


--
-- Name: FormalUbiquitousLang PK_FormalUbiquitousLang; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."FormalUbiquitousLang"
    ADD CONSTRAINT "PK_FormalUbiquitousLang" PRIMARY KEY ("FormalUbiquitousLangId");


--
-- Name: FormalUbiquitousLangHistory PK_FormalUbiquitousLangHistory; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."FormalUbiquitousLangHistory"
    ADD CONSTRAINT "PK_FormalUbiquitousLangHistory" PRIMARY KEY ("HistoryId");


--
-- Name: Projects PK_Projects; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."Projects"
    ADD CONSTRAINT "PK_Projects" PRIMARY KEY ("ProjectId");


--
-- Name: RelatedUbiquitousLang PK_RelatedUbiquitousLang; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."RelatedUbiquitousLang"
    ADD CONSTRAINT "PK_RelatedUbiquitousLang" PRIMARY KEY ("RelatedUbiquitousLangId");


--
-- Name: UserProjects PK_UserProjects; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."UserProjects"
    ADD CONSTRAINT "PK_UserProjects" PRIMARY KEY ("UserProjectId");


--
-- Name: __EFMigrationsHistory PK___EFMigrationsHistory; Type: CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."__EFMigrationsHistory"
    ADD CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId");


--
-- Name: EmailIndex; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "EmailIndex" ON public."AspNetUsers" USING btree ("NormalizedEmail");


--
-- Name: IX_ApplicationUsers_IsDeleted; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_ApplicationUsers_IsDeleted" ON public."AspNetUsers" USING btree ("IsDeleted");


--
-- Name: IX_ApplicationUsers_PasswordResetExpiry; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_ApplicationUsers_PasswordResetExpiry" ON public."AspNetUsers" USING btree ("PasswordResetExpiry");


--
-- Name: IX_ApplicationUsers_PasswordResetToken; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_ApplicationUsers_PasswordResetToken" ON public."AspNetUsers" USING btree ("PasswordResetToken");


--
-- Name: IX_ApplicationUsers_UpdatedAt; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_ApplicationUsers_UpdatedAt" ON public."AspNetUsers" USING btree ("UpdatedAt");


--
-- Name: IX_AspNetRoleClaims_RoleId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON public."AspNetRoleClaims" USING btree ("RoleId");


--
-- Name: IX_AspNetUserClaims_UserId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_AspNetUserClaims_UserId" ON public."AspNetUserClaims" USING btree ("UserId");


--
-- Name: IX_AspNetUserRoles_RoleId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_AspNetUserRoles_RoleId" ON public."AspNetUserRoles" USING btree ("RoleId");


--
-- Name: IX_DomainApprovers_ApproverId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_DomainApprovers_ApproverId" ON public."DomainApprovers" USING btree ("ApproverId");


--
-- Name: IX_DomainApprovers_DomainId_ApproverId_Unique; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE UNIQUE INDEX "IX_DomainApprovers_DomainId_ApproverId_Unique" ON public."DomainApprovers" USING btree ("DomainId", "ApproverId");


--
-- Name: IX_DomainApprovers_UpdatedBy; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_DomainApprovers_UpdatedBy" ON public."DomainApprovers" USING btree ("UpdatedBy");


--
-- Name: IX_Domains_DomainName; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_Domains_DomainName" ON public."Domains" USING btree ("DomainName");


--
-- Name: IX_Domains_IsDeleted; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_Domains_IsDeleted" ON public."Domains" USING btree ("IsDeleted");


--
-- Name: IX_Domains_ProjectId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_Domains_ProjectId" ON public."Domains" USING btree ("ProjectId");


--
-- Name: IX_Domains_UpdatedAt; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_Domains_UpdatedAt" ON public."Domains" USING btree ("UpdatedAt");


--
-- Name: IX_Domains_UpdatedBy; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_Domains_UpdatedBy" ON public."Domains" USING btree ("UpdatedBy");


--
-- Name: IX_DraftUbiquitousLangRelation_Draft_Formal_Unique; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE UNIQUE INDEX "IX_DraftUbiquitousLangRelation_Draft_Formal_Unique" ON public."DraftUbiquitousLangRelations" USING btree ("DraftUbiquitousLangId", "FormalUbiquitousLangId");


--
-- Name: IX_DraftUbiquitousLangRelations_FormalUbiquitousLangId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_DraftUbiquitousLangRelations_FormalUbiquitousLangId" ON public."DraftUbiquitousLangRelations" USING btree ("FormalUbiquitousLangId");


--
-- Name: IX_DraftUbiquitousLangRelations_UpdatedBy; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_DraftUbiquitousLangRelations_UpdatedBy" ON public."DraftUbiquitousLangRelations" USING btree ("UpdatedBy");


--
-- Name: IX_DraftUbiquitousLang_ApplicantId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_DraftUbiquitousLang_ApplicantId" ON public."DraftUbiquitousLang" USING btree ("ApplicantId");


--
-- Name: IX_DraftUbiquitousLang_DomainId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_DraftUbiquitousLang_DomainId" ON public."DraftUbiquitousLang" USING btree ("DomainId");


--
-- Name: IX_DraftUbiquitousLang_JapaneseName; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_DraftUbiquitousLang_JapaneseName" ON public."DraftUbiquitousLang" USING btree ("JapaneseName");


--
-- Name: IX_DraftUbiquitousLang_SourceFormalUbiquitousLangId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_DraftUbiquitousLang_SourceFormalUbiquitousLangId" ON public."DraftUbiquitousLang" USING btree ("SourceFormalUbiquitousLangId");


--
-- Name: IX_DraftUbiquitousLang_Status; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_DraftUbiquitousLang_Status" ON public."DraftUbiquitousLang" USING btree ("Status");


--
-- Name: IX_DraftUbiquitousLang_UpdatedAt; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_DraftUbiquitousLang_UpdatedAt" ON public."DraftUbiquitousLang" USING btree ("UpdatedAt");


--
-- Name: IX_DraftUbiquitousLang_UpdatedBy; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_DraftUbiquitousLang_UpdatedBy" ON public."DraftUbiquitousLang" USING btree ("UpdatedBy");


--
-- Name: IX_FormalUbiquitousLangHistory_DomainId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_FormalUbiquitousLangHistory_DomainId" ON public."FormalUbiquitousLangHistory" USING btree ("DomainId");


--
-- Name: IX_FormalUbiquitousLangHistory_FormalUbiquitousLangId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_FormalUbiquitousLangHistory_FormalUbiquitousLangId" ON public."FormalUbiquitousLangHistory" USING btree ("FormalUbiquitousLangId");


--
-- Name: IX_FormalUbiquitousLangHistory_IsDeleted; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_FormalUbiquitousLangHistory_IsDeleted" ON public."FormalUbiquitousLangHistory" USING btree ("IsDeleted");


--
-- Name: IX_FormalUbiquitousLangHistory_UpdatedAt; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_FormalUbiquitousLangHistory_UpdatedAt" ON public."FormalUbiquitousLangHistory" USING btree ("UpdatedAt");


--
-- Name: IX_FormalUbiquitousLangHistory_UpdatedBy; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_FormalUbiquitousLangHistory_UpdatedBy" ON public."FormalUbiquitousLangHistory" USING btree ("UpdatedBy");


--
-- Name: IX_FormalUbiquitousLang_DomainId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_FormalUbiquitousLang_DomainId" ON public."FormalUbiquitousLang" USING btree ("DomainId");


--
-- Name: IX_FormalUbiquitousLang_EnglishName; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_FormalUbiquitousLang_EnglishName" ON public."FormalUbiquitousLang" USING btree ("EnglishName");


--
-- Name: IX_FormalUbiquitousLang_IsDeleted; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_FormalUbiquitousLang_IsDeleted" ON public."FormalUbiquitousLang" USING btree ("IsDeleted");


--
-- Name: IX_FormalUbiquitousLang_JapaneseName; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_FormalUbiquitousLang_JapaneseName" ON public."FormalUbiquitousLang" USING btree ("JapaneseName");


--
-- Name: IX_FormalUbiquitousLang_UpdatedAt; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_FormalUbiquitousLang_UpdatedAt" ON public."FormalUbiquitousLang" USING btree ("UpdatedAt");


--
-- Name: IX_FormalUbiquitousLang_UpdatedBy; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_FormalUbiquitousLang_UpdatedBy" ON public."FormalUbiquitousLang" USING btree ("UpdatedBy");


--
-- Name: IX_Projects_IsDeleted; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_Projects_IsDeleted" ON public."Projects" USING btree ("IsDeleted");


--
-- Name: IX_Projects_ProjectName; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_Projects_ProjectName" ON public."Projects" USING btree ("ProjectName");


--
-- Name: IX_Projects_UpdatedAt; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_Projects_UpdatedAt" ON public."Projects" USING btree ("UpdatedAt");


--
-- Name: IX_Projects_UpdatedBy; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_Projects_UpdatedBy" ON public."Projects" USING btree ("UpdatedBy");


--
-- Name: IX_RelatedUbiquitousLang_Source_Target_Unique; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE UNIQUE INDEX "IX_RelatedUbiquitousLang_Source_Target_Unique" ON public."RelatedUbiquitousLang" USING btree ("SourceUbiquitousLangId", "TargetUbiquitousLangId");


--
-- Name: IX_RelatedUbiquitousLang_TargetUbiquitousLangId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_RelatedUbiquitousLang_TargetUbiquitousLangId" ON public."RelatedUbiquitousLang" USING btree ("TargetUbiquitousLangId");


--
-- Name: IX_RelatedUbiquitousLang_UpdatedBy; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_RelatedUbiquitousLang_UpdatedBy" ON public."RelatedUbiquitousLang" USING btree ("UpdatedBy");


--
-- Name: IX_UserProjects_ProjectId; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_UserProjects_ProjectId" ON public."UserProjects" USING btree ("ProjectId");


--
-- Name: IX_UserProjects_UpdatedBy; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE INDEX "IX_UserProjects_UpdatedBy" ON public."UserProjects" USING btree ("UpdatedBy");


--
-- Name: IX_UserProjects_UserId_ProjectId_Unique; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE UNIQUE INDEX "IX_UserProjects_UserId_ProjectId_Unique" ON public."UserProjects" USING btree ("UserId", "ProjectId");


--
-- Name: RoleNameIndex; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE UNIQUE INDEX "RoleNameIndex" ON public."AspNetRoles" USING btree ("NormalizedName");


--
-- Name: UserNameIndex; Type: INDEX; Schema: public; Owner: ubiquitous_lang_user
--

CREATE UNIQUE INDEX "UserNameIndex" ON public."AspNetUsers" USING btree ("NormalizedUserName");


--
-- Name: AspNetRoleClaims FK_AspNetRoleClaims_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."AspNetRoleClaims"
    ADD CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserClaims FK_AspNetUserClaims_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."AspNetUserClaims"
    ADD CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetRoles_RoleId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES public."AspNetRoles"("Id") ON DELETE CASCADE;


--
-- Name: AspNetUserRoles FK_AspNetUserRoles_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."AspNetUserRoles"
    ADD CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: DomainApprovers FK_DomainApprovers_AspNetUsers_ApproverId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DomainApprovers"
    ADD CONSTRAINT "FK_DomainApprovers_AspNetUsers_ApproverId" FOREIGN KEY ("ApproverId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: DomainApprovers FK_DomainApprovers_AspNetUsers_UpdatedBy; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DomainApprovers"
    ADD CONSTRAINT "FK_DomainApprovers_AspNetUsers_UpdatedBy" FOREIGN KEY ("UpdatedBy") REFERENCES public."AspNetUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DomainApprovers FK_DomainApprovers_Domains_DomainId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DomainApprovers"
    ADD CONSTRAINT "FK_DomainApprovers_Domains_DomainId" FOREIGN KEY ("DomainId") REFERENCES public."Domains"("DomainId") ON DELETE CASCADE;


--
-- Name: Domains FK_Domains_AspNetUsers_UpdatedBy; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."Domains"
    ADD CONSTRAINT "FK_Domains_AspNetUsers_UpdatedBy" FOREIGN KEY ("UpdatedBy") REFERENCES public."AspNetUsers"("Id") ON DELETE RESTRICT;


--
-- Name: Domains FK_Domains_Projects_ProjectId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."Domains"
    ADD CONSTRAINT "FK_Domains_Projects_ProjectId" FOREIGN KEY ("ProjectId") REFERENCES public."Projects"("ProjectId") ON DELETE CASCADE;


--
-- Name: DraftUbiquitousLangRelations FK_DraftUbiquitousLangRelations_AspNetUsers_UpdatedBy; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DraftUbiquitousLangRelations"
    ADD CONSTRAINT "FK_DraftUbiquitousLangRelations_AspNetUsers_UpdatedBy" FOREIGN KEY ("UpdatedBy") REFERENCES public."AspNetUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DraftUbiquitousLangRelations FK_DraftUbiquitousLangRelations_DraftUbiquitousLang_DraftUbiqu~; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DraftUbiquitousLangRelations"
    ADD CONSTRAINT "FK_DraftUbiquitousLangRelations_DraftUbiquitousLang_DraftUbiqu~" FOREIGN KEY ("DraftUbiquitousLangId") REFERENCES public."DraftUbiquitousLang"("DraftUbiquitousLangId") ON DELETE CASCADE;


--
-- Name: DraftUbiquitousLangRelations FK_DraftUbiquitousLangRelations_FormalUbiquitousLang_FormalUbi~; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DraftUbiquitousLangRelations"
    ADD CONSTRAINT "FK_DraftUbiquitousLangRelations_FormalUbiquitousLang_FormalUbi~" FOREIGN KEY ("FormalUbiquitousLangId") REFERENCES public."FormalUbiquitousLang"("FormalUbiquitousLangId") ON DELETE CASCADE;


--
-- Name: DraftUbiquitousLang FK_DraftUbiquitousLang_AspNetUsers_ApplicantId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DraftUbiquitousLang"
    ADD CONSTRAINT "FK_DraftUbiquitousLang_AspNetUsers_ApplicantId" FOREIGN KEY ("ApplicantId") REFERENCES public."AspNetUsers"("Id") ON DELETE SET NULL;


--
-- Name: DraftUbiquitousLang FK_DraftUbiquitousLang_AspNetUsers_UpdatedBy; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DraftUbiquitousLang"
    ADD CONSTRAINT "FK_DraftUbiquitousLang_AspNetUsers_UpdatedBy" FOREIGN KEY ("UpdatedBy") REFERENCES public."AspNetUsers"("Id") ON DELETE RESTRICT;


--
-- Name: DraftUbiquitousLang FK_DraftUbiquitousLang_Domains_DomainId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DraftUbiquitousLang"
    ADD CONSTRAINT "FK_DraftUbiquitousLang_Domains_DomainId" FOREIGN KEY ("DomainId") REFERENCES public."Domains"("DomainId") ON DELETE CASCADE;


--
-- Name: DraftUbiquitousLang FK_DraftUbiquitousLang_FormalUbiquitousLang_SourceFormalUbiqui~; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."DraftUbiquitousLang"
    ADD CONSTRAINT "FK_DraftUbiquitousLang_FormalUbiquitousLang_SourceFormalUbiqui~" FOREIGN KEY ("SourceFormalUbiquitousLangId") REFERENCES public."FormalUbiquitousLang"("FormalUbiquitousLangId") ON DELETE SET NULL;


--
-- Name: FormalUbiquitousLangHistory FK_FormalUbiquitousLangHistory_AspNetUsers_UpdatedBy; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."FormalUbiquitousLangHistory"
    ADD CONSTRAINT "FK_FormalUbiquitousLangHistory_AspNetUsers_UpdatedBy" FOREIGN KEY ("UpdatedBy") REFERENCES public."AspNetUsers"("Id") ON DELETE RESTRICT;


--
-- Name: FormalUbiquitousLangHistory FK_FormalUbiquitousLangHistory_Domains_DomainId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."FormalUbiquitousLangHistory"
    ADD CONSTRAINT "FK_FormalUbiquitousLangHistory_Domains_DomainId" FOREIGN KEY ("DomainId") REFERENCES public."Domains"("DomainId") ON DELETE CASCADE;


--
-- Name: FormalUbiquitousLangHistory FK_FormalUbiquitousLangHistory_FormalUbiquitousLang_FormalUbiq~; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."FormalUbiquitousLangHistory"
    ADD CONSTRAINT "FK_FormalUbiquitousLangHistory_FormalUbiquitousLang_FormalUbiq~" FOREIGN KEY ("FormalUbiquitousLangId") REFERENCES public."FormalUbiquitousLang"("FormalUbiquitousLangId") ON DELETE CASCADE;


--
-- Name: FormalUbiquitousLang FK_FormalUbiquitousLang_AspNetUsers_UpdatedBy; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."FormalUbiquitousLang"
    ADD CONSTRAINT "FK_FormalUbiquitousLang_AspNetUsers_UpdatedBy" FOREIGN KEY ("UpdatedBy") REFERENCES public."AspNetUsers"("Id") ON DELETE RESTRICT;


--
-- Name: FormalUbiquitousLang FK_FormalUbiquitousLang_Domains_DomainId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."FormalUbiquitousLang"
    ADD CONSTRAINT "FK_FormalUbiquitousLang_Domains_DomainId" FOREIGN KEY ("DomainId") REFERENCES public."Domains"("DomainId") ON DELETE CASCADE;


--
-- Name: Projects FK_Projects_AspNetUsers_UpdatedBy; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."Projects"
    ADD CONSTRAINT "FK_Projects_AspNetUsers_UpdatedBy" FOREIGN KEY ("UpdatedBy") REFERENCES public."AspNetUsers"("Id") ON DELETE RESTRICT;


--
-- Name: RelatedUbiquitousLang FK_RelatedUbiquitousLang_AspNetUsers_UpdatedBy; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."RelatedUbiquitousLang"
    ADD CONSTRAINT "FK_RelatedUbiquitousLang_AspNetUsers_UpdatedBy" FOREIGN KEY ("UpdatedBy") REFERENCES public."AspNetUsers"("Id") ON DELETE RESTRICT;


--
-- Name: RelatedUbiquitousLang FK_RelatedUbiquitousLang_FormalUbiquitousLang_SourceUbiquitous~; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."RelatedUbiquitousLang"
    ADD CONSTRAINT "FK_RelatedUbiquitousLang_FormalUbiquitousLang_SourceUbiquitous~" FOREIGN KEY ("SourceUbiquitousLangId") REFERENCES public."FormalUbiquitousLang"("FormalUbiquitousLangId") ON DELETE CASCADE;


--
-- Name: RelatedUbiquitousLang FK_RelatedUbiquitousLang_FormalUbiquitousLang_TargetUbiquitous~; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."RelatedUbiquitousLang"
    ADD CONSTRAINT "FK_RelatedUbiquitousLang_FormalUbiquitousLang_TargetUbiquitous~" FOREIGN KEY ("TargetUbiquitousLangId") REFERENCES public."FormalUbiquitousLang"("FormalUbiquitousLangId") ON DELETE CASCADE;


--
-- Name: UserProjects FK_UserProjects_AspNetUsers_UpdatedBy; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."UserProjects"
    ADD CONSTRAINT "FK_UserProjects_AspNetUsers_UpdatedBy" FOREIGN KEY ("UpdatedBy") REFERENCES public."AspNetUsers"("Id") ON DELETE RESTRICT;


--
-- Name: UserProjects FK_UserProjects_AspNetUsers_UserId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."UserProjects"
    ADD CONSTRAINT "FK_UserProjects_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES public."AspNetUsers"("Id") ON DELETE CASCADE;


--
-- Name: UserProjects FK_UserProjects_Projects_ProjectId; Type: FK CONSTRAINT; Schema: public; Owner: ubiquitous_lang_user
--

ALTER TABLE ONLY public."UserProjects"
    ADD CONSTRAINT "FK_UserProjects_Projects_ProjectId" FOREIGN KEY ("ProjectId") REFERENCES public."Projects"("ProjectId") ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

